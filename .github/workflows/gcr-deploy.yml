name: Google Cloud Run Deploy
# https://github.com/google-github-actions/setup-gcloud
on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCR_PROJECT }}
  RUN_REGION: europe-north1
  SERVICE_NAME: tiira-watcher-ui
  REPO_NAME: tiira-watcher-repo
  FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}

jobs:
  build:
    name: Build React App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@main

      - name: Setup Node.js (NPM)
        uses: actions/setup-node@master
        with:
          node-version: '18.x'

      - name: Use cached node_modules
        uses: actions/cache@master
        with:
          path: node_modules
          key: nodeModules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            nodeModules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        env:
          CI: true

      - name: Substitute env vars
        run: |
          cp .production.env .production.env.tmp
          envsubst < .production.env.tmp > .production.env
          rm .production.env.tmp 
      
      - name: Build Production
        run: yarn run build:production

      - name: Archive Production Artifact
        uses: actions/upload-artifact@main
        with:
          name: build
          path: build

  deploy-gcr:
    name: Deploy to GCR
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@main

      - name: Download Artifact
        uses: actions/download-artifact@main
        with:
          name: build
          path: docker/build

      - name: Setup GCloud Auth
        id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCR_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1

      - name: Set version
        run: echo "VERSION=$(fgrep '"version"' package.json | cut -d "\"" -f 4)" | tee -a $GITHUB_ENV

      # Build and push image to Google Container Registry
      - name: Build & Push
        run: |-
          gcloud builds submit \
            --quiet \
            --tag "$RUN_REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$SERVICE_NAME:${{ env.VERSION }}"
        working-directory: docker
