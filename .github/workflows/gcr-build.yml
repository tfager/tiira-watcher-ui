name: Build and push to artifact registry
# https://github.com/google-github-actions/setup-gcloud
on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: environment to deploy to
        required: true
    secrets:
      GCR_SA_KEY:
        required: true
      REACT_ENV:
        required: true

env:
  GCR_PROJECT: ${{ vars.GCR_PROJECT }}
  RUN_REGION: europe-north1
  SERVICE_NAME: tiira-watcher-ui
  REPO_NAME: tiira-watcher-repo
  REACT_ENV: ${{ secrets.REACT_ENV }}

jobs:
  build:
    name: Build React App
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node.js (NPM)
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Use cached node_modules
        uses: actions/cache@master
        with:
          path: node_modules
          key: nodeModules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            nodeModules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        env:
          CI: true

      - name: Substitute env vars
        run: |
          echo $REACT_ENV > .production.env

      - name: Testing
        run: |
          cat .production.env

      - name: Build Production
        run: yarn run build:production

      - name: Archive Production Artifact
        uses: actions/upload-artifact@main
        with:
          name: build
          path: build

  deploy-gcr:
    name: Deploy to GCR
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@main
        with:
          name: build
          path: docker/build

      - name: Setup GCloud Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCR_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Set version
        run: echo "VERSION=$(fgrep '"version"' package.json | cut -d "\"" -f 4)" | tee -a $GITHUB_ENV

      - name: Store version file
        run: |
          echo $VERSION > ui_version.txt
          gcloud storage cp ui_version.txt gs://${{ env.GCR_PROJECT }}-terraform-backend/app_versions/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to artifact registry
        run: |
          gcloud auth configure-docker ${{ env.RUN_REGION }}-docker.pkg.dev --quiet

      - name: Build
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ./docker
          tags: "${{ env.RUN_REGION }}-docker.pkg.dev/${{ env.GCR_PROJECT }}/${{ env.REPO_NAME }}/${{ env.SERVICE_NAME }}:${{ env.VERSION }}"
